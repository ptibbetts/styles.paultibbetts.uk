/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary{display:block}audio, canvas, progress, video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden], template{display:none}a{background-color:transparent}a:active, a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b, strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub, sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code, kbd, pre, samp{font-family:monospace;font-size:1em}button, input, optgroup, select, textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button, select{text-transform:none}button, html input[type=button], input[type=reset], input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled], html input[disabled]{cursor:default}button::-moz-focus-inner, input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox], input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td, th{padding:0}html{box-sizing:border-box}*, :after, :before{box-sizing:inherit}body{display:flex;flex-direction:column;min-height:100vh}main{flex:1 0 auto;order:1}.Footer{order:2}.Header+main{padding-top:3rem}body{color:#404040;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif;line-height:1.4}p+h2{margin-top:2em}p a{border-bottom:1px solid #e6e6e6}p a:hover{border-color:#ccc}img{width:100%;max-width:100%}a{color:#1791d0;text-decoration:none}li{margin-bottom:.5em}.container{margin:0 auto;max-width:42rem;padding-left:1rem;padding-right:1rem;width:100%}.container--fluid{max-width:none}.row{padding-top:1rem;padding-bottom:1rem}.inline-list{display:inline-block;list-style-type:none;margin:0;padding-left:0}.inline-list li{display:inline-block;margin-bottom:0}.list-of-links{list-style-type:none;padding-left:0}.list-of-links+h3{margin-top:2em}.list-of-links li{min-height:1.8em}.list-of-links li a{border-bottom:0;display:inline-block;width:100%}.list-of-links li a:hover .list-of-links-meta{color:#8c8c8c}.list-of-links-header{font-size:.7em}.list-of-links-meta{color:#ccc;display:inline-block;font-size:.8em;line-height:1}.rounded-edges{border-radius:3px}.teaser{min-height:2rem}.teaser-link{border-bottom:0;display:inline-block;line-height:1.2;max-width:42em}.teaser-link:hover .teaser-meta{color:#8c8c8c}.teaser-meta{color:#ccc;display:inline-block;font-size:.8em;line-height:1.5;margin:.5em 0}.Logo{border-radius:100%;height:2rem;width:2rem;margin-right:1rem;transition:all .15s ease}.Logo-padding{display:inline-block;padding:1rem 1rem 1rem 0}.Logo-padding:hover .Logo{box-shadow:0 0 4px 0 #ccc;transform:scale(1.2)}.Navigation{display:flex;flex-wrap:wrap}.Navigation-list{list-style-type:none;margin:0;padding-left:0}.Navigation-listItem{display:inline-block;color:gray;font-size:.8em;font-weight:700;padding-left:.5em;position:relative;text-transform:uppercase}.Navigation-listItem:not(:last-child){padding-right:.5em}.Navigation-listItem:not(:last-child):after{color:#bfbfbf;content:',';position:absolute;top:0;text-shadow:1px 1px rgba(255,0,0,.15)}.Navigation-link{border-bottom:1px solid #e6e6e6;color:#404040;text-decoration:none}.Navigation-link:hover{border-color:#ccc}.Brand{border-bottom:0;display:flex;align-items:center}.Header{background:hsla(0,0%,100%,.75);position:fixed;top:0;left:0;width:100%;z-index:1;opacity:.75;transition:opacity .15s ease}.Header:hover{opacity:1}.Header .container{display:flex;align-items:center;flex-direction:row}.Header .Brand{flex:1}.Header .Navigation{flex:3;justify-content:flex-end;font-size:.6em;margin-left:auto;text-align:right}.SocialList a{border-bottom:0}.SocialList-item{margin-right:.5em}.SocialList-item:last-of-type{margin-right:0}.Introduction{background:#fff;display:flex;align-items:center;flex-wrap:wrap;justify-content:center;padding:5rem 0;position:relative;z-index:2;flex:1 0 auto}.Introduction .container{display:flex;flex-wrap:wrap;align-items:flex-start}.Introduction .SocialList{margin-top:0}.Introduction-imageContainer{flex:1;flex-basis:2rem;margin-right:1rem;max-width:10rem}.Introduction-image{border-radius:100%;min-width:2rem;max-width:12rem;width:100%}.Introduction-text{flex:2;margin-left:auto;flex-basis:10em;max-width:25em;padding-right:1em}.Introduction-text .u-url{color:inherit;cursor:text}.Introduction-text h1{font-size:1.1em}.Introduction-text p a{border-bottom:1px solid #e6e6e6;display:inline-block}.Introduction-text p a:hover{border-color:#bfbfbf}.Posts{margin-bottom:3rem}.Posts--recent .Posts-header{color:#8c8c8c;font-size:.75em;text-transform:uppercase}.Posts-allLink{color:#ccc}.Posts-allLink:hover{color:#8c8c8c}.Post-meta{border-top:1px solid #e6e6e6;color:#ccc;font-size:.8em;margin:2rem 0 0;padding-top:1rem}.Post-meta a{color:inherit}.Post-meta a:hover{border-bottom:1px solid #e6e6e6}.js-touchSupported .Post-meta, .Post-meta:hover{color:#8c8c8c}.js-touchSupported .Post-meta a, .Post-meta:hover a{color:#1791d0}.Post-tag:not(:last-of-type) .Post-tagLink:after{content:","}.Footer{color:#ccc;font-size:.8em;font-style:italic;padding:1rem 0}.Footer:hover{color:rgba(0,0,0,.5)}.Footer .container{display:flex}.Footer a{color:inherit;transition:color .15s ease}.Footer a:hover{border-bottom:1px solid #bfbfbf}@media (min-width:25rem){.Header .Navigation{font-size:.8em}}@media (min-width:32rem){.Header .Navigation{font-size:.9em}}@media (min-width:31.25rem){.Introduction-text h1{font-size:2em}}
/*# sourceMappingURL=data:application/json;base64, */
